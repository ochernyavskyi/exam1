# This is a basic workflow to help you get started with Actions

name: CI-CD-Pipeline-To-AWS
env:
    S3_Bucket_name : "my-test-bucket-odessa"
    Application_Name: "MyFlask"
    Env: "Myflask-env-1"
    DeployPackageName: "flask_app_${{ github.sha }}.zip"
    AWS-Region-Name: "eu-central-1"

# Controls when the workflow will run
on: 
  push:
      branches:
        - main
        
  pull_request: 
      branches:
        - main
   
  
  #    branches: [main]
  # Triggers the workflow on push or pull request events but only for the main branch
#   push:
#     branches: [ main ]
#   pull_request:
#     branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  #workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  ci-part:
    runs-on: ubuntu-latest

# Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Git clone our repo
        uses: actions/checkout@v2
        with:
          # Full git history is needed to get a proper list of changed files within `super-linter`
          fetch-depth: 0
        
      - name: Lint Code Base
        uses: github/super-linter@v4
        env:
          VALIDATE_ALL_CODEBASE: false
          DEFAULT_BRANCH: master
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
      - name: Create Zip deployment package
        run: zip -r ${{ env.DeployPackageName}} ./ -x *.git*
            
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.MY_AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.MY_AWS_SECRET_KEY }}
          aws-region: ${{ env.AWS-Region-Name }}
          
      - name: Copy deployment package to S3
        run : aws s3 cp ${{ env.DeployPackageName}} s3://${{ env.S3_Bucket_name }}/
        
      - name: Print happy message for CI
        run :  echo "CI part finished succesfully"

  cd-part:
    runs-on: ubuntu-latest
    needs: [ci-part]
    
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.MY_AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.MY_AWS_SECRET_KEY }}
          aws-region: ${{ env.AWS-Region-Name }}
          
      - name: Create new elastic application
        run : |
          aws elasticbeanstalk create-application-version \
          --application-name ${{ env.Application_Name }} \
          --source-bundle S3Bucket="${{ env.S3_Bucket_name }}",S3Key="${{ env.DeployPackageName }}" \
          --version-label "Ver-${{ github.sha }}" \
          --description "CommitSHA-${{ github.sha }}"
          
      - name: Deploy new application
        run: aws elasticbeanstalk update-environment --environment-name ${{ env.Env }} --version-label "Ver-${{ github.sha }}"
        
      - name: Print happy message for CI
        run :  echo "CD part finished succesfully"
